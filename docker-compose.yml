services:
  api01: &api01
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=payments
      - RUST_LOG=rinha_de_backend_rust=debug
      - NATS_URL=nats://nats:4222
      - DEFAULT_PAYMENT_URL=http://payment-processor-default:8080
      - FALLBACK_PAYMENT_URL=http://payment-processor-fallback:8080
      - PORT=3000
    volumes:
      - .:/usr/src/app
    networks:
      - backend
      - payment-processor
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '25MB'

  api02:
    <<: *api01
    hostname: api02
    networks:
      - backend
      - payment-processor
    volumes:
      - .:/usr/src/app

  nginx:
    image: nginx:latest
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend
    depends_on:
      # - redis
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '70MB'

  nats:
    image: nats:2.10.16-alpine3.19
    # command: -m 8222
    command: -js -sd /data -m 8222
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O -
      start_period: 3s
      retries: 3
      timeout: 3s
      interval: 14s
    networks:
      - backend
    volumes:
      - nats_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '50MB'

  postgres:
    image: postgres:17.5-alpine # Specifies the PostgreSQL image and version
    container_name: my-postgres-db # Assigns a name to the container
    restart: always # Ensures the container restarts automatically
    environment:
      POSTGRES_DB: payments # Sets the default database name
      POSTGRES_USER: myuser # Sets the database user
      POSTGRES_PASSWORD: mypassword # Sets the database password
    ports:
      - "5432:5432" # Maps host port 5432 to container port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persists data using a named volume
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Mount initialization script
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d payments"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '70MB'


volumes:
  nats_data:
    driver: local
  postgres_data: # Defines the named volume for data persistence
    driver: local

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
